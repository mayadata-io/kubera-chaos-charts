apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: argowf-chaos-catalogue-pod-delete-
  namespace: kubera
spec:
  entrypoint: argowf-chaos
  serviceAccountName: argo-chaos
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  arguments:
    parameters:
      - name: adminModeNamespace
        value: "kubera"
  templates:
    - name: argowf-chaos
      steps:
        - - name: install-application
            template: install-application
        - - name: install-experiment
            template: install-experiment
        - - name: load-test
            template: load-test
          - name: run-chaos
            template: run-chaos
        - - name: revert-chaos
            template: revert-chaos    

    - name: install-application
      container:
        image: litmuschaos/litmus-app-deployer:latest
        args: ["-namespace=sock-shop","-typeName=weak", "-timeout=400"] #for resilient provide type flagName as resilient(-typeName=resilient)

    - name: run-chaos
      inputs:
        artifacts:
          - name: run-chaos
            path: /tmp/chaosengine.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: catalogue-pod-delete-chaos
                  namespace: {{workflow.parameters.adminModeNamespace}}
                spec:
                  appinfo:
                    appns: 'sock-shop'
                    applabel: 'name=catalogue'
                    appkind: 'deployment'
                  annotationCheck: 'false'
                  engineState: 'active'
                  auxiliaryAppInfo: ''
                  chaosServiceAccount: litmus-admin
                  monitoring: true
                  jobCleanUpPolicy: 'retain'
                  components:
                    runner:
                      imagePullPolicy: Always
                  experiments:
                    - name: pod-delete
                      spec:
                        probe:
                        - name: "check-probe-success"
                          type: "promProbe"
                          promProbe/inputs:
                            endpoint: "http://prometheus.monitoring.svc.cluster.local:9090"
                            query: "sum(irate(request_duration_seconds_count{job='sock-shop/front-end',status_code='200'}[1m])) by (status_code)"
                            comparator:
                              criteria: ">=" #supports >=,<=,>,<,==,!= comparision
                              value: "100"
                          mode: "Edge"
                          runProperties:  
                            probeTimeout: 5
                            interval: 5
                            retry: 1
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: '10'
                
                            # set chaos interval (in sec) as desired
                            - name: CHAOS_INTERVAL
                              value: '10'
                
                            # pod failures without '--force' & default terminationGracePeriodSeconds
                            - name: FORCE
                              value: 'false'
      container:
        image: litmuschaos/litmus-checker:latest
        args: ["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"]          

    - name: install-experiment
      inputs:
        artifacts:
          - name: install-experiment
            path: /tmp/pod-delete.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                description:
                  message: |
                    Deletes a pod belonging to a deployment/statefulset/daemonset
                kind: ChaosExperiment
                metadata:
                  name: pod-delete
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                          - "apps"
                          - "batch"
                          - "litmuschaos.io"
                        resources:
                          - "deployments"
                          - "jobs"
                          - "pods"
                          - "pods/log"
                          - "events"
                          - "configmaps"
                          - "chaosengines"
                          - "chaosexperiments"
                          - "chaosresults"
                        verbs:
                          - "create"
                          - "list"
                          - "get"
                          - "patch"
                          - "update"
                          - "delete"
                      - apiGroups:
                          - ""
                        resources: 
                          - "nodes"
                        verbs:
                          - "get"
                          - "list"
                    image: "litmuschaos/go-runner:latest"
                    imagePullPolicy: Always
                    args:
                    - -c
                    - ./experiments -name pod-delete
                    command:
                    - /bin/bash
                    env:
                    - name: TOTAL_CHAOS_DURATION
                      value: '15'
                    # Period to wait before and after injection of chaos in sec
                    - name: RAMP_TIME
                      value: ''
                    # provide the kill count
                    - name: KILL_COUNT
                      value: ''
                    - name: FORCE
                      value: 'true'
                    - name: CHAOS_INTERVAL
                      value: '5'
                    - name: LIB
                      value: 'litmus'    
                    labels:
                      name: pod-delete
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args:
          [
            "kubectl apply -f /tmp/pod-delete.yaml -n {{workflow.parameters.adminModeNamespace}}",
          ]
    
    - name: load-test
      container:
        image: litmuschaos/litmus-app-deployer:latest
        args: ["-namespace=loadtest"]
    
    - name: revert-chaos
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: 
          [ 
            "kubectl delete chaosengine catalogue-pod-delete-chaos -n {{workflow.parameters.adminModeNamespace}}",
          ]